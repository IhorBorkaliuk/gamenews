{"version":3,"file":"static/js/565.21cd2508.chunk.js","mappings":"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","sources":["components/PostCard/PostCardStyled.jsx","components/SearchBar/StyledSearchBar.jsx","components/SearchBar/SearchBar.jsx","components/PostCard/PostCard.jsx","components/NoPostsFound/StyledNoPostsFound.jsx","components/NoPostsFound/NoPostsFound.jsx","components/PostsList/PostsList.jsx","services/API.js"],"sourcesContent":["import styled from \"styled-components\";\nimport { NavLink } from \"react-router-dom\";\n\nexport const StyledNavLink = styled(NavLink)`\n  text-decoration: none;\n  color: #0e0f0f; \n\n  &:hover {\n    text-decoration: underline; \n  }\n`;","import styled from \"styled-components\";\n\nexport const InputSearch = styled.input`\nmargin-top: 15px;\n  font-size: 16px;\n  padding: 10px;\n  border: 1px solid #ccc;\n  border-radius: 5px;\n  outline: none;\n  transition: border-color 0.3s ease-in-out;\n  width: 100%;\n  max-width: 300px;\n\n  /* Зміна стилю при фокусі */\n  &:focus {\n    border-color: #4d4c4a; /* Зелений колір */\n    box-shadow: 0 0 5px rgba(27, 27, 27, 0.5); /* Тінь при фокусі */\n  }\n\n  /* Додатковий стиль для темного фону */\n  body.dark-mode & {\n    background-color: #333;\n    color: #fff;\n    border-color: #555;\n  }\n`;\n\nexport const SearchBarWrapper = styled.div`\n    text-align: center;\n`;","import React from 'react';\nimport { InputSearch, SearchBarWrapper } from './StyledSearchBar';\n\nconst SearchBar = ({ setSearchParam, query }) => {\n\n  const handleSearch = ({target}) => {\n    setSearchParam({search: target.value})\n  };\n\n  return (\n    <SearchBarWrapper>\n      <InputSearch\n        placeholder=\"Введіть запит...\"\n        onChange={handleSearch}\n        value={query}\n      />\n    </SearchBarWrapper>\n  );\n};\n\nexport default SearchBar;\n","import React from 'react';\nimport Card from 'react-bootstrap/Card';\nimport { StyledNavLink } from './PostCardStyled';\n\nexport const PostCard = ({ el }) => {\n  return (\n    <Card className=\"h-100\" >\n      <Card.Img variant=\"top\" src={el.main_image} alt={el.short_description} />\n      <StyledNavLink\n        to={'/:id'}\n        state={el}\n        rel=\"noopener noreferrer\"\n        className=\"stretched-link\"\n      >\n        <Card.Body>\n          <Card.Title>{el.title}</Card.Title>\n          <Card.Text>{el.short_description}</Card.Text>\n        </Card.Body>\n      </StyledNavLink>\n    </Card>\n  );\n};\n\nexport default PostCard;\n","import styled from 'styled-components';\n\nexport const NoNewsMessageContainer = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  color: #555;\n  text-align: center;\n`;\n\nexport const NoNewsMessageText = styled.p`\n\n  font-size: 18px;\n`;\n","import React from 'react';\nimport { NoNewsMessageContainer, NoNewsMessageText } from './StyledNoPostsFound';\n\nconst NoPostsFound = ({ searchParam }) => {\n  console.log(searchParam);\n  return (\n    <NoNewsMessageContainer style={{ textAlign: 'center', width: '100%' }}>\n      <NoNewsMessageText>\n        Новин за запитом \"{searchParam}\" не знайдено.\n      </NoNewsMessageText>\n    </NoNewsMessageContainer>\n  );\n};\n\nexport default NoPostsFound;\n","import React, { useState, useEffect } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { API } from 'services/API';\nimport Col from 'react-bootstrap/Col';\nimport Row from 'react-bootstrap/Row';\n\nimport SearchBar from 'components/SearchBar/SearchBar';\nimport PostCard from 'components/PostCard/PostCard';\nimport NoPostsFound from 'components/NoPostsFound/NoPostsFound';\n\nconst PostsList = () => {\n  const [posts, setPosts] = useState([]);\n  const [filteredPosts, setFilteredPosts] = useState([]);\n\n  const [searchParam, setSearchParam] = useSearchParams();\n\n  const query = searchParam.get('search') ?? ''\n\n  useEffect(() => {\n    const loadPosts = async () => {\n      try {\n        const result = await API();\n        setPosts(result);\n      } catch (error) {\n        console.error(error);\n      }\n    };\n\n    loadPosts();\n  }, []);\n\n  useEffect(() => {\n    setFilteredPosts(\n      posts.filter(el => el.title.toLowerCase().includes(query.toLowerCase()))\n    );\n  \n  }, [searchParam, posts, query])\n  \n\n  return (\n    <div>\n      <SearchBar setSearchParam={setSearchParam} query={query} />\n      <Row xs={1} md={4} className=\"g-4 mt-4 d-flex align-items-stretch\">\n        {searchParam && query && filteredPosts.length === 0 ? (\n          <Col>\n            <NoPostsFound searchParam={searchParam} />\n          </Col>\n        ) : (\n          (filteredPosts.length > 0 ? filteredPosts : posts).map(\n            (el, index) => (\n              <Col key={index}>\n                <PostCard el={el}></PostCard> \n              </Col>\n            )\n          )\n        )}\n      </Row>\n    </div>\n  );\n};\n\nexport default PostsList;\n","import axios from 'axios';\n\nexport const API = async () => {\n\nconst options = {\n  method: 'GET',\n  url: 'https://mmo-games.p.rapidapi.com/latestnews',\n  headers: {\n    'X-RapidAPI-Key': 'cb5ec0d937mshd5990c2595c25fap103db2jsn373dd91ee4a4',\n    'X-RapidAPI-Host': 'mmo-games.p.rapidapi.com',\n  },\n};\n\ntry {\n  const response = await axios.request(options);\n    return response.data\n} catch (error) {\n  console.error(error);\n}\n}\n\nexport const APIGames = async () => {\n\nconst options = {\n  method: 'GET',\n  url: 'https://mmo-games.p.rapidapi.com/games',\n  headers: {\n    'X-RapidAPI-Key': 'cb5ec0d937mshd5990c2595c25fap103db2jsn373dd91ee4a4',\n    'X-RapidAPI-Host': 'mmo-games.p.rapidapi.com'\n  }\n};\n\ntry {\n\tconst response = await axios.request(options);\n\treturn response.data\n} catch (error) {\n\tconsole.error(error);\n}\n}\n\n"],"names":["StyledNavLink","styled","NavLink","_templateObject","_taggedTemplateLiteral","InputSearch","SearchBarWrapper","_templateObject2","_ref","setSearchParam","query","_jsx","children","placeholder","onChange","_ref2","target","search","value","el","_jsxs","Card","className","variant","src","main_image","alt","short_description","to","state","rel","title","NoNewsMessageContainer","NoNewsMessageText","searchParam","console","log","style","textAlign","width","PostsList","_searchParam$get","posts","setPosts","useState","filteredPosts","setFilteredPosts","useSearchParams","get","useEffect","async","result","API","error","loadPosts","filter","toLowerCase","includes","SearchBar","Row","xs","md","length","Col","NoPostsFound","map","index","PostCard","options","method","url","headers","axios","data","APIGames"],"sourceRoot":""}