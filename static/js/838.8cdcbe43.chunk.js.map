{"version":3,"file":"static/js/838.8cdcbe43.chunk.js","mappings":"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","sources":["components/PostPage/PostPageStyled.jsx","components/Reviews/CommentPostForm.jsx","components/PostPage/PostPage.jsx","components/Reviews/FormStyled.jsx"],"sourcesContent":["// PostPageStyled.js\nimport styled from 'styled-components';\n\n// Обгортка для всієї сторінки\nexport const Wrapper = styled.div`\nposition: relative;\n  max-width: 800px;\n  margin: 0 auto;\n  padding: 20px;\n  padding-top: 30px;\n  background-color: #f8f9fa;\n  border-radius: 8px;\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\n`;\n\n// Заголовок статті\nexport const Title = styled.h1`\ntext-align: center;\n  font-size: 2rem;\n  font-weight: bold;\n  margin-bottom: 20px;\n  color: #333;\n`;\n\n// Зображення статті\nexport const Image = styled.img`\n  width: 100%;\n  height: auto;\n  border-radius: 8px;\n  margin-bottom: 20px;\n`;\n\n// Параграф тексту\nexport const Paragraph = styled.p`\n  font-size: 1rem;\n  line-height: 1.6;\n  color: #555;\n  margin-bottom: 20px;\n`;\n\n// Посилання на джерело статті\nexport const Link = styled.a`\n  color: #007bff;\n  text-decoration: none;\n  font-weight: bold;\n\n  &:hover {\n    text-decoration: underline;\n  }\n`;\nexport const ReviewItem = styled.div`\n  background-color: #fff;\n  border: 1px solid #ddd;\n  border-radius: 8px;\n  padding: 20px;\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\n  position: relative; /* Для розташування кнопки */\n`;\n\nexport const ReviewTitle = styled.h1`\n  font-size: 24px;\n  color: #333;\n  margin-bottom: 10px;\n`;\n\nexport const ReviewText = styled.p`\n  font-size: 16px;\n  color: #666;\n`;\n\nexport const DeleteButton = styled.button`\n  position: absolute;\n  top: 10px;\n  right: 10px;\n  background-color: #555;\n  color: white;\n  border: none;\n  border-radius: 5px;\n  padding: 5px 10px;\n  font-size: 14px;\n  cursor: pointer;\n  transition: background-color 0.3s ease;\n\n  &:hover {\n    background-color: #333;\n  }\n`;\n","import { useState } from 'react';\nimport { TextArea, SubmitButton, FormContainer } from './FormStyled';\nimport { v4 as uuidv4 } from 'uuid';\nimport { useParams } from 'react-router';\n\nexport const CommentPostForm = ({ onSubmit }) => {\n  const [textPost, setTextPost] = useState(() => {\n    const savedText = localStorage.getItem('commentPost');\n    return savedText ? JSON.parse(savedText) : '';\n  });\n\n  const { id } = useParams()\n  const { login } = JSON.parse(localStorage.getItem('regData')) || {};\n\n  const handleChange = e => {\n    const value = e.target.value;\n    setTextPost(value);\n    localStorage.setItem('commentPost', JSON.stringify(value));\n  };\n\n  const handleSubmit = evt => {\n    evt.preventDefault();\n    if (textPost === '') {\n      alert('Fill up all the fields!');\n      return;\n    }\n    const newPostComment = {\n      post: textPost,\n      id: uuidv4(),\n      postId: id,\n      login: login,\n    };\n    setTextPost('');\n    onSubmit(newPostComment);\n    localStorage.removeItem('commentPost');\n  };\n\n  return (\n      <FormContainer>\n        <form onSubmit={handleSubmit}>\n          <p>\n            <b>{login}</b>\n          </p>\n          <TextArea\n            onChange={handleChange}\n            value={textPost}\n            placeholder=\"Write your review here...\"\n          />\n          <SubmitButton type=\"submit\">Відправити</SubmitButton>\n        </form>\n      </FormContainer>\n  );\n};\n\nexport default CommentPostForm;","import React, { useState, useEffect } from 'react';\nimport { useLocation, useParams } from 'react-router';\nimport DOMPurify from 'dompurify';\nimport {\n  Image,\n  Title,\n  Wrapper,\n  Paragraph,\n  Link,\n  ReviewItem,\n  DeleteButton,\n  ReviewTitle,\n} from './PostPageStyled';\nimport CommentPostForm from 'components/Reviews/CommentPostForm';\n\nconst PostPage = () => {\n  const [commentsPost, setCommentsPost] = useState(() => {\n    const savedComments = localStorage.getItem('commentsPost');\n    return savedComments ? JSON.parse(savedComments) : [];\n  });\n  const location = useLocation();\n  console.log(location);\n  const { state } = location;\n\n  const { id } = useParams()\n\n  const {login} = JSON.parse(localStorage.getItem('regData'))\n  console.log(login);\n\n  const article = state.article_content;\n  const cleanText = DOMPurify.sanitize(article, { ALLOWED_TAGS: [] });\n\n      useEffect(() => {\n        const storedComments = localStorage.getItem(`commentsPost_${id}`);\n        if (storedComments) {\n          setCommentsPost(JSON.parse(storedComments))\n        }\n      }, [id]);\n\n  const handlesubmit = newComment => {\n    const updatedComments = [...commentsPost, newComment]\n    setCommentsPost(updatedComments)\n    localStorage.setItem(`commentsPost_${id}`, JSON.stringify(updatedComments));\n  }\n\n    const handleDelete = commentID => {\n      const updatedComments = commentsPost.filter(post => post.id !== commentID)\n      setCommentsPost(updatedComments)\n      localStorage.setItem(\n        `commentsPost_${id}`,\n        JSON.stringify(updatedComments)\n      );\n  };\n  \n\n\n  return (\n    <Wrapper>\n      <Title>{state.title}</Title>\n      <Image src={state.main_image} alt={state.short_description} />\n      <Paragraph dangerouslySetInnerHTML={{ __html: cleanText }} />\n\n      <Paragraph>\n        Source:{' '}\n        <Link\n          href={state.article_url}\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          {state.article_url}\n        </Link>\n      </Paragraph>\n      {commentsPost.map((post, index) => (\n        <ReviewItem key={index}>\n          <b>{login}</b>\n          <DeleteButton onClick={() => handleDelete(post.id)}>X</DeleteButton>\n          <ReviewTitle>{post.post}</ReviewTitle>\n        </ReviewItem>\n      ))}\n      <CommentPostForm onSubmit={handlesubmit}></CommentPostForm>\n    </Wrapper>\n  );\n};\n\nexport default PostPage;\n","import styled from 'styled-components';\nimport { Button } from 'react-bootstrap';\n\n// Контейнер для всієї форми\nexport const FormContainer = styled.div`\n  background-color: #ffffff;\n  border-radius: 8px;\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\n  padding: 20px;\n  max-width: 500px;\n  margin: 20px auto;\n`;\n\n// Поле вводу для тексту коментаря\nexport const TextArea = styled.textarea`\n  width: 100%;\n  height: 150px;\n  padding: 10px;\n  border: 1px solid #ced4da;\n  border-radius: 4px;\n  font-size: 16px;\n  resize: vertical;\n  box-sizing: border-box;\n\n  &:focus {\n    border-color: #adb5bd; /* Світло-сірий для фокусу */\n    outline: none;\n    box-shadow: 0 0 0 0.2rem rgba(173, 181, 189, 0.25); /* Світло-сірий тінь */\n  }\n`;\n\n// Кнопка відправки\nexport const SubmitButton = styled(Button)`\n  width: 100%;\n  padding: 10px;\n  font-size: 16px;\n  border-radius: 4px;\n  background-color: #6c757d; /* Темно-сірий фон кнопки */\n  border-color: #6c757d; /* Темно-сірий бордер кнопки */\n\n  &:hover {\n    background-color: #5a6268; /* Трохи темніший сірий для ховера */\n    border-color: #545b62; /* Ще темніший сірий для бордера при ховері */\n  }\n`;\n"],"names":["Wrapper","styled","_templateObject","_taggedTemplateLiteral","Title","_templateObject2","Image","_templateObject3","Paragraph","_templateObject4","Link","_templateObject5","ReviewItem","_templateObject6","ReviewTitle","_templateObject7","DeleteButton","_templateObject8","_templateObject9","_ref","onSubmit","textPost","setTextPost","useState","savedText","localStorage","getItem","JSON","parse","id","useParams","login","_jsx","FormContainer","children","_jsxs","evt","preventDefault","alert","newPostComment","post","uuidv4","postId","removeItem","TextArea","onChange","e","value","target","setItem","stringify","placeholder","SubmitButton","type","PostPage","commentsPost","setCommentsPost","savedComments","location","useLocation","console","log","state","article","article_content","cleanText","DOMPurify","ALLOWED_TAGS","useEffect","storedComments","concat","title","src","main_image","alt","short_description","dangerouslySetInnerHTML","__html","href","article_url","rel","map","index","onClick","commentID","updatedComments","filter","handleDelete","CommentPostForm","newComment","Button"],"sourceRoot":""}