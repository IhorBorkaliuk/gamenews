{"version":3,"file":"static/js/881.39bd63f1.chunk.js","mappings":"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","sources":["services/API.js","components/SearchBar/StyledSearchBar.jsx","components/SearchBar/SearchBar.jsx","components/PostCard/PostCard.jsx","components/NoPostsFound/StyledNoPostsFound.jsx","components/NoPostsFound/NoPostsFound.jsx","components/PostsList/PostsList.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst API = async () => {\n\nconst options = {\n  method: 'GET',\n  url: 'https://mmo-games.p.rapidapi.com/latestnews',\n  headers: {\n    'X-RapidAPI-Key': 'cb5ec0d937mshd5990c2595c25fap103db2jsn373dd91ee4a4',\n    'X-RapidAPI-Host': 'mmo-games.p.rapidapi.com',\n  },\n};\n\ntry {\n  const response = await axios.request(options);\n    return response.data\n} catch (error) {\n  console.error(error);\n}\n}\n\nexport default API;\n","import styled from \"styled-components\";\n\nexport const InputSearch = styled.input`\nmargin-top: 15px;\n  font-size: 16px;\n  padding: 10px;\n  border: 1px solid #ccc;\n  border-radius: 5px;\n  outline: none;\n  transition: border-color 0.3s ease-in-out;\n  width: 100%;\n  max-width: 300px;\n\n  /* Зміна стилю при фокусі */\n  &:focus {\n    border-color: #4d4c4a; /* Зелений колір */\n    box-shadow: 0 0 5px rgba(27, 27, 27, 0.5); /* Тінь при фокусі */\n  }\n\n  /* Додатковий стиль для темного фону */\n  body.dark-mode & {\n    background-color: #333;\n    color: #fff;\n    border-color: #555;\n  }\n`;\n\nexport const SearchBarWrapper = styled.div`\n    text-align: center;\n`;","import React, { useState } from 'react';\nimport { InputSearch, SearchBarWrapper } from './StyledSearchBar';\n\nconst SearchBar = ({ onSearch }) => {\n  const [search, setSearch] = useState('');\n\n  const handleSearch = evt => {\n    const searchTerm = evt.target.value;\n    setSearch(searchTerm);\n    onSearch(searchTerm); // Передача значення пошуку назад у батьківський компонент\n  };\n\n  return (\n    <SearchBarWrapper>\n      <InputSearch\n        placeholder=\"Введіть запит...\"\n        onChange={handleSearch}\n        value={search}\n      />\n    </SearchBarWrapper>\n  );\n};\n\nexport default SearchBar;\n","import React from 'react'\nimport Card from 'react-bootstrap/Card';\nimport { NavLink, useNavigate } from 'react-router-dom';\n\n\nexport const PostCard = ({ el }) => {\n   const navigate = useNavigate();\n\n   const handleClick = () => {\n     navigate(`/${el.id}`, { state: { el } });\n   };\nreturn (\n  <Card className=\"h-100\" onClick={handleClick}>\n    <Card.Img variant=\"top\" src={el.main_image} alt={el.short_description} />\n    <NavLink\n      to={`/${el.id}`}\n      rel=\"noopener noreferrer\"\n      className=\"stretched-link\"\n    >\n      <Card.Body>\n        <Card.Title>{el.title}</Card.Title>\n        <Card.Text>{el.short_description}</Card.Text>\n      </Card.Body>\n    </NavLink>\n  </Card>\n);\n}\n\nexport default PostCard\n","import styled from 'styled-components';\n\nexport const NoNewsMessageContainer = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  color: #555;\n  text-align: center;\n`;\n\nexport const NoNewsMessageText = styled.p`\n\n  font-size: 18px;\n`;\n","import React from 'react';\nimport { NoNewsMessageContainer, NoNewsMessageText } from './StyledNoPostsFound';\n\nconst NoPostsFound = ({ searchTerm }) => {\n  return (\n    <NoNewsMessageContainer style={{ textAlign: 'center', width: '100%' }}>\n      <NoNewsMessageText>\n        Новин за запитом \"{searchTerm}\" не знайдено.\n      </NoNewsMessageText>\n    </NoNewsMessageContainer>\n  );\n};\n\nexport default NoPostsFound;\n","import React, { useState, useEffect } from 'react';\nimport API from 'services/API';\nimport Col from 'react-bootstrap/Col';\nimport Row from 'react-bootstrap/Row';\n\nimport SearchBar from 'components/SearchBar/SearchBar';\nimport PostCard from 'components/PostCard/PostCard';\nimport NoPostsFound from 'components/NoPostsFound/NoPostsFound';\n\nconst PostsList = () => {\n  const [posts, setPosts] = useState([]);\n  const [filteredPosts, setFilteredPosts] = useState([]);\n  const [searchTerm, setSearchTerm] = useState('');\n\n  useEffect(() => {\n    const loadPosts = async () => {\n      try {\n        const result = await API();\n        setPosts(result);\n            console.log(result);\n      } catch (error) {\n        console.error(error);\n      }\n    };\n\n    loadPosts();\n  }, []);\n\n  const handleSearch = searchTerm => {\n    setSearchTerm(searchTerm);\n    const filtered = posts.filter(el =>\n      el.title.toLowerCase().includes(searchTerm.toLowerCase())\n    );\n    setFilteredPosts(filtered);\n  };\n\n  return (\n    <div>\n      <SearchBar onSearch={handleSearch} />\n      <Row xs={1} md={4} className=\"g-4 mt-4 d-flex align-items-stretch\">\n        {searchTerm && filteredPosts.length === 0 ? (\n          <Col>\n            <NoPostsFound searchTerm={searchTerm} />\n          </Col>\n        ) : (\n          (filteredPosts.length > 0 ? filteredPosts : posts).map(\n            (el, index) => (\n              <Col key={index}>\n                <PostCard el={el}></PostCard>\n              </Col>\n            )\n            )\n        )}\n      </Row>\n\n    </div>\n  );\n};\n\nexport default PostsList;\n"],"names":["async","options","method","url","headers","axios","data","error","console","InputSearch","styled","_templateObject","_taggedTemplateLiteral","SearchBarWrapper","_templateObject2","_ref","onSearch","search","setSearch","useState","_jsx","children","placeholder","onChange","evt","searchTerm","target","value","el","navigate","useNavigate","_jsxs","Card","className","onClick","handleClick","concat","id","state","variant","src","main_image","alt","short_description","NavLink","to","rel","title","NoNewsMessageContainer","NoNewsMessageText","style","textAlign","width","PostsList","posts","setPosts","filteredPosts","setFilteredPosts","setSearchTerm","useEffect","result","API","log","loadPosts","SearchBar","filtered","filter","toLowerCase","includes","Row","xs","md","length","Col","NoPostsFound","map","index","PostCard"],"sourceRoot":""}