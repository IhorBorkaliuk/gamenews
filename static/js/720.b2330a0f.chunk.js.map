{"version":3,"file":"static/js/720.b2330a0f.chunk.js","mappings":"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","sources":["components/Games/GamesStyled.jsx","components/GameCard/GameCard.jsx","components/Filter/FilterStyled.jsx","components/Filter/Filter.jsx","components/Games/Games.jsx","components/NoPostsFound/StyledNoPostsFound.jsx","components/NoPostsFound/NoPostsFound.jsx","components/PostCard/PostCardStyled.jsx","components/SearchBar/StyledSearchBar.jsx","components/SearchBar/SearchBar.jsx","services/API.js"],"sourcesContent":["import styled from \"styled-components\";\n\n\nexport const WrapperGame = styled.div `\n    margin-top: 30px;\n`\n\nexport const LoadMore = styled.button`\n  display: block;\n  margin: 15px auto;\n  text-align: center;\n  background-color: #555;\n  color: #fff;\n  border: none;\n  border-radius: 4px;\n  padding: 10px 20px;\n  cursor: pointer;\n  transition: background-color 0.3s ease;\n\n  &:hover {\n    background-color: #333;\n  }\n`;","import React from 'react'\nimport Card from 'react-bootstrap/Card';\nimport { StyledNavLink } from 'components/PostCard/PostCardStyled';\n\nexport const GameCard = ({ el }) => {\n  return (\n        <Card className=\"h-100\" >\n      <Card.Img variant=\"top\" src={el.thumbnail} alt={el.short_description} />\n      <StyledNavLink\n        to={`/games/${el.id}`}\n        state={el}\n        rel=\"noopener noreferrer\"\n        className=\"stretched-link\"\n      >\n        <Card.Body>\n          <Card.Title>{el.title}</Card.Title>\n          <Card.Text>{el.short_description}</Card.Text>\n        </Card.Body>\n      </StyledNavLink>\n    </Card>\n  );\n}\n","import styled from 'styled-components';\n\nexport const DropdownContainer = styled.div`\n  position: relative;\n  display: inline-block;\n`;\n\nexport const DropdownHeader = styled.div`\n  background-color: #f0f0f0;\n  color: #333;\n  padding: 10px;\n  border: 1px solid #ccc;\n  border-radius: 4px;\n  cursor: pointer;\n`;\n\nexport const DropdownList = styled.ul`\n  position: absolute;\n  top: calc(100% + 5px);\n  left: 0;\n  width: 150px;\n  max-height: 200px; \n  overflow-y: auto; \n  overflow-x: hidden;\n  margin: 0;\n  padding: 0;\n  list-style: none;\n  border: 1px solid #ccc;\n  border-top: none;\n  border-radius: 0 0 4px 4px;\n  background-color: #fff;\n  box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);\n  z-index: 100;\n`;\n\nexport const DropdownItem = styled.li`\n  padding: 10px;\n  cursor: pointer;\n  transition: background-color 0.3s;\n  white-space: nowrap;\n\n  &:hover {\n    background-color: #f0f0f0;\n  }\n`;\n","import React, { useState } from 'react';\nimport { DropdownContainer, DropdownHeader, DropdownItem, DropdownList } from './FilterStyled';\n\nconst FilterDropdown = ({ genres }) => {\n  const [isOpen, setIsOpen] = useState(false);\n  const [selectedOption, setSelectedOption] = useState(null);\n\n  const toggleDropdown = () => {\n    setIsOpen(!isOpen);\n  };\n\n  const handleOptionClick = option => {\n    setSelectedOption(option);\n    setIsOpen(false);\n  };\n\n  return (\n    <DropdownContainer>\n      <DropdownHeader onClick={toggleDropdown}>\n        {selectedOption ? selectedOption : 'Виберіть жанр'}\n      </DropdownHeader>\n      {isOpen && (\n        <DropdownList>\n          {genres.map((option, index) => (\n            <DropdownItem key={index} onClick={() => handleOptionClick(option)}>\n              {option}\n            </DropdownItem>\n          ))}\n        </DropdownList>\n      )}\n    </DropdownContainer>\n  );\n};\n\nexport default FilterDropdown;\n","import React, { useEffect, useState } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { APIGames } from 'services/API';\nimport Col from 'react-bootstrap/Col';\nimport Row from 'react-bootstrap/Row';\nimport { LoadMore } from './GamesStyled';\nimport { GameCard } from 'components/GameCard/GameCard';\nimport NoPostsFound from 'components/NoPostsFound/NoPostsFound';\nimport SearchBar from 'components/SearchBar/SearchBar';\nimport FilterDropdown from 'components/Filter/Filter';\n\nexport const Games = () => {\n  const [games, setGames] = useState([]);\n  const [searchParam, setSearchParam] = useSearchParams();\n  const [loadedGames, setLoadedGames] = useState(20)\n\n  useEffect(() => {\n    const loadGames = async () => {\n      try {\n        const result = await APIGames();\n        setGames(result);\n      } catch (error) {\n        console.error('Помилка при завантаженні ігор: ', error);\n      }\n    };\n    loadGames();\n  }, []);\n\n  const loadmore = () => {\n    setLoadedGames(prevState => prevState + 20)\n  }\n\n\n  const queryGames = searchParam.get('search') ?? '';\n  const filteredGames = games.filter(el =>\n    el.title.toLowerCase().includes(queryGames.toLowerCase())\n  );\n  const displayedGames = queryGames\n    ? filteredGames\n    : games.slice(0, loadedGames);\n  \n  const genres = games.map(game => game.genre).filter((game, index, games) => games.indexOf(game)===index)\n  console.log(genres);\n\n  return (\n    <div>\n      <SearchBar queryGames={queryGames} setSearchParam={setSearchParam} />\n      <FilterDropdown genres={genres} />\n      <Row xs={1} md={4} className=\"g-3 mt-3 d-flex align-items-stretch\">\n        {displayedGames.length === 0 ? (\n          <Col>\n            <NoPostsFound searchParam={queryGames} />\n          </Col>\n        ) : (\n          displayedGames.map((el, index) => (\n            <Col key={index}>\n              <GameCard el={el}></GameCard>\n            </Col>\n          ))\n        )}\n      </Row>\n      <LoadMore onClick={loadmore}>Load more</LoadMore>\n    </div>\n  );\n};\n\nexport default Games;\n","import styled from 'styled-components';\n\nexport const NoNewsMessageContainer = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  color: #555;\n  text-align: center;\n`;\n\nexport const NoNewsMessageText = styled.p`\n\n  font-size: 18px;\n`;\n","import React from 'react';\nimport { NoNewsMessageContainer, NoNewsMessageText } from './StyledNoPostsFound';\n\nconst NoPostsFound = ({ searchParam }) => {\n  console.log(searchParam);\n  return (\n    <NoNewsMessageContainer style={{ textAlign: 'center', width: '100%' }}>\n      <NoNewsMessageText>\n        Новин за запитом \"{searchParam}\" не знайдено.\n      </NoNewsMessageText>\n    </NoNewsMessageContainer>\n  );\n};\n\nexport default NoPostsFound;\n","import styled from \"styled-components\";\nimport { NavLink } from \"react-router-dom\";\n\nexport const StyledNavLink = styled(NavLink)`\n  text-decoration: none;\n  color: #0e0f0f; \n\n  &:hover {\n    text-decoration: underline; \n  }\n`;","import styled from \"styled-components\";\n\nexport const InputSearch = styled.input`\nmargin-top: 15px;\n  font-size: 16px;\n  padding: 10px;\n  border: 1px solid #ccc;\n  border-radius: 5px;\n  outline: none;\n  transition: border-color 0.3s ease-in-out;\n  width: 100%;\n  max-width: 300px;\n\n  /* Зміна стилю при фокусі */\n  &:focus {\n    border-color: #4d4c4a; /* Зелений колір */\n    box-shadow: 0 0 5px rgba(27, 27, 27, 0.5); /* Тінь при фокусі */\n  }\n\n  /* Додатковий стиль для темного фону */\n  body.dark-mode & {\n    background-color: #333;\n    color: #fff;\n    border-color: #555;\n  }\n`;\n\nexport const SearchBarWrapper = styled.div`\n    text-align: center;\n    margin-bottom: 30px;\n`;","import React from 'react';\nimport { InputSearch, SearchBarWrapper } from './StyledSearchBar';\n\nconst SearchBar = ({ setSearchParam, query }) => {\n\n  const handleSearch = ({target}) => {\n    setSearchParam({search: target.value})\n  };\n\n  return (\n    <SearchBarWrapper>\n      <InputSearch\n        placeholder=\"Введіть запит...\"\n        onChange={handleSearch}\n        value={query}\n      />\n    </SearchBarWrapper>\n  );\n};\n\nexport default SearchBar;\n","import axios from 'axios';\n\nexport const API = async () => {\n\nconst options = {\n  method: 'GET',\n  url: 'https://mmo-games.p.rapidapi.com/latestnews',\n  headers: {\n    'X-RapidAPI-Key': 'cb5ec0d937mshd5990c2595c25fap103db2jsn373dd91ee4a4',\n    'X-RapidAPI-Host': 'mmo-games.p.rapidapi.com',\n  },\n};\n\ntry {\n  const response = await axios.request(options);\n    return response.data\n} catch (error) {\n  console.error(error);\n}\n}\n\nexport const APIGames = async () => {\n\nconst options = {\n  method: 'GET',\n  url: 'https://mmo-games.p.rapidapi.com/games',\n  headers: {\n    'X-RapidAPI-Key': 'cb5ec0d937mshd5990c2595c25fap103db2jsn373dd91ee4a4',\n    'X-RapidAPI-Host': 'mmo-games.p.rapidapi.com'\n  }\n};\n\ntry {\n\tconst response = await axios.request(options);\n\treturn response.data\n} catch (error) {\n\tconsole.error(error);\n}\n}\n\n"],"names":["styled","_templateObject","_taggedTemplateLiteral","LoadMore","_templateObject2","GameCard","_ref","el","_jsxs","Card","className","children","_jsx","variant","src","thumbnail","alt","short_description","StyledNavLink","to","concat","id","state","rel","title","DropdownContainer","DropdownHeader","DropdownList","_templateObject3","DropdownItem","_templateObject4","genres","isOpen","setIsOpen","useState","selectedOption","setSelectedOption","onClick","toggleDropdown","map","option","index","handleOptionClick","Games","_searchParam$get","games","setGames","searchParam","setSearchParam","useSearchParams","loadedGames","setLoadedGames","useEffect","async","result","APIGames","error","console","loadGames","queryGames","get","filteredGames","filter","toLowerCase","includes","displayedGames","slice","game","genre","indexOf","log","SearchBar","FilterDropdown","Row","xs","md","length","Col","NoPostsFound","loadmore","prevState","NoNewsMessageContainer","NoNewsMessageText","style","textAlign","width","NavLink","InputSearch","SearchBarWrapper","query","placeholder","onChange","_ref2","target","search","value","API","options","method","url","headers","axios","data"],"sourceRoot":""}